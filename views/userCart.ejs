<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
      crossorigin="anonymous"
    />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Lora:wght@400;500;600;700&family=Poppins:wght@300;400;500;600&family=Rubik:wght@300;400&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/userCart.css" />

    <title>User Cart Page</title>
  </head>
  <body>
    <div class="container nav-container">
      <div class="nav-main">
        <h2 class="navmain-heading">VRNA</h2>
        <h5>SHOP</h5>
        <h5>CONTACT</h5>
        <h5>ABOUT</h5>
      </div>
      <div class="nav-sec">
        <h5><ion-icon name="search-outline"></ion-icon> </h5>
        <h5><ion-icon name="person-outline"></ion-icon></h5>
        <h5><ion-icon name="cart-outline"></ion-icon></h5>
        </div>
    </h5>
    </div>
    <h2 class="primary-heading">Cart Details</h2>
    <div class="container outerContainer">

       
          <div class="container text-center cardContainer">
            <table class="table caption-top">
              <div class="addcontainer">
              
                <div class="searchbox">
                  <form id="searchForm" method="GET" class="d-flex" role="search">
                    <input
                      id="searchInput"
                      name="query"
                      class="form-control me-2"
                      type="search"
                      placeholder="Search"
                      aria-label="Search"
                    />
                    <button class="btn btn-outline-success" type="submit">
                      Search
                    </button>
                  </form>
                </div>
               
              </div>
              <thead>
                <tr>
                  <th scope="col">S.NO</th>
                  <th scope="col">PRODUCT NAME</th>
                  <th scope="col">CATEGORY</th>
                  <th scope="col">PRICE</th>
                  <th scope="col">STOCK</th>
    
                  <th scope="col">COUNT</th>
         
                  <th scope="col">REMOVE</th>
                </tr>
              </thead>
              <tbody id="productTableBody">
                <% let num = 1 ;%> <% products.forEach((product) =>{ %>
                <tr>
                  <th scope="row"><%=num%></th>
                  <td>
                    <div class="productname">
                      <img
                        class="productimg"
                        src="<%=product.productImages[0]%>"
                        alt=""
                      />
                      <p><%=product.productName%></p>
                    </div>
                  </td>
                  <td data-productid="<%= product._id %>" data-price="<%= product.productPrice %>"><%= product.productCategory %></td>
                  <td ><div class="product-price" data-price="<%= product.productPrice %>">$<%= product.productPrice %></div></td>
                  <td><%=product.productStock%></td>
    
                  <td><div class="countContainer">
                    <button class="decrementBtn button"><ion-icon name="remove-outline"></ion-icon></button>
                   
                    <div class="counter "><%= product.count %></div>
                    <button class="incrementBtn button"><ion-icon name="add-outline"></ion-icon></button>
                  </div></td>
                  
                  <td>
                    <form
                      method="GET"
                      action="/user/userCart/delete/<%= product._id %>"
                    >
                      <button type="submit" class="btn btn-danger btns">
                        REMOVE
                      </button>
                    </form>
                    <!-- <ul id="user-cart">
                
                      <li>
                     
                          <button class="remove-product" data-productid="">Remove</button>
                      </li> -->
                 
                  </ul>
                  </td>
                </tr>
                <% num = num+1%> <% }) %>
              </tbody>
               
            </table>
            <a href="#" class="btn btn-Buynow">BACK TO SHOPPING</a>
            </div>
          
        
      
      <div class="container priceContainer">
      <% const prices = products.map(product => product.productPrice); %>
      <div id="prices-data" data-prices="<%= JSON.stringify(prices) %>"></div>
      <div id="products-data" data-products="<%= JSON.stringify(products) %>"></div>


          <h5 class="price-heading">PRICE DETAILS</h5>
          <p class="pricedetailsp"><strong>Price : </strong><span id="price"> $546746</span></p>
          <p class="pricedetailsp"><strong>Delivery Charge :</strong> <span id="deliveryCharge">$500</span>   </p>
          <p  class="pricedetailsp"><strong>TotalPrice :</strong><span id="totalPrice">$500</span>  </p>
                <a href="/user/checkout" class="btn btn-Buynow">PROCEED TO CHECKOUT</a>
          </p>
        </div>
      </div>  
   
    <footer>
      <div class="text-center footer-container">
        <div class="container">
          <div class="container row">
            <div class="col">
              <ul class="footerul">
                <li><h1 class="heading-footer footer-link">VRNA</h1></li>
                <li class="footer-link">
                  <p>
                    Workout Clothes designed to help you become your personal
                    best. Because when it comes to performing at your max, there
                    should be no obstacles – least of all your workout clothes.
                  </p>
                </li>
              </ul>
            </div>
            <div class="col">
              <ul class="footerul">
                <li><a class="footer-link" href="#">SHOPPING</a></li>
                <li><a class="footer-link" href="#">SALES</a></li>
              </ul>
            </div>
            <div class="col">
              <ul class="footerul">
                <li><a class="footer-link" href="#">SHOPPING</a></li>
                <li><a class="footer-link" href="#">Contact Us</a></li>
                <li><a class="footer-link" href="#">Payment Method</a></li>
                <li><a class="footer-link" href="#">Delivery</a></li>
              </ul>
            </div>
            <div class="col">
              <ul class="footerul">
                <li><a class="footer-link" href="#">NEWSLETTER</a></li>
                <li class="footer-link">
                  <p>
                    Be the first to know about new arrivals, look books, sales &
                    promos
                  </p>
                </li>
              </ul>
            </div>
          </div>
        </div>
        <br />
        <p class="copyright">Copyright © 3333 All rights reserved | VRNA</p>
      </div>
    
    </footer>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>// Get all increment and decrement buttons by class name
 const incrementButtons = document.querySelectorAll(".incrementBtn");
const decrementButtons = document.querySelectorAll(".decrementBtn");
const counters = document.querySelectorAll(".counter");
let count = 1;

function updateCounter(index) {
  counters[index].textContent = count;
}
  
incrementButtons.forEach((button, index) => {
  button.addEventListener("click", () => {
    count++;
    updateCounter(index);

    // Find the closest parent <tr> element and retrieve the data-productid and data-price attributes
    const row = button.closest("tr");
    const productId = row.querySelector("td[data-productid]").getAttribute("data-productid");
    const productPrice = parseFloat(row.querySelector("td[data-price]").getAttribute("data-price"));

    // Calculate and display the product subtotal
    const productSubtotal = count * productPrice;
    row.querySelector(".product-price").textContent = `$${productSubtotal}`;

    // Perform any other necessary calculations (e.g., total price)
    countPrice();

    // Make an AJAX request to update the totalProductCount on the server
    $.ajax({
      type: "POST",
      url: `/user/update-product-count/${productId}`,
      data: { count: count },
      success: function (response) {
        console.log(response.message);
      },
      error: function (error) {
        console.error("Error updating product count:", error);
      },
    });
  });
});
decrementButtons.forEach((button, index) => {
  button.addEventListener("click", () => {
    if (count > 1) {
      count--;
      updateCounter(index);

      // Find the closest parent <tr> element and retrieve the data-productid and data-price attributes
      const row = button.closest("tr");
      const productId = row.querySelector("td[data-productid]").getAttribute("data-productid");
      const productPrice = parseFloat(row.querySelector("td[data-price]").getAttribute("data-price"));

      // Calculate and display the product subtotal
      const productSubtotal = count * productPrice;
      row.querySelector(".product-price").textContent = `$${productSubtotal}`;

      // Perform any other necessary calculations (e.g., total price)
      countPrice();

      // Make an AJAX request to update the totalProductCount on the server
      $.ajax({
        type: "POST",
        url: `/user/update-product-count/${productId}`,
        data: { count: count },
        success: function (response) {
          console.log(response.message);
        },
        error: function (error) {
          console.error("Error updating product count:", error);
        },
      });
    }
  });
});



    
  // Initial update for all counters
  counters.forEach((counter, index) => {
      updateCounter(index);
  });
  const pricesDataElement = document.getElementById('prices-data');
  const pricesDataJSON = pricesDataElement.getAttribute('data-prices');

  // Parse the JSON data into a JavaScript array
  const prices = JSON.parse(pricesDataJSON);

  const price = document.getElementById('price');
  const deliveryCharge = document.getElementById('deliveryCharge');
  const totalPrice = document.getElementById('totalPrice');

  function countPrice() {
  // Perform any necessary calculations to update the total price here
  let sum = 0;
  const productSubtotals = document.querySelectorAll(".product-price");
  productSubtotals.forEach((subtotal) => {
    sum += parseFloat(subtotal.textContent.replace("$", ""));
  });

  const price = document.getElementById("price");
  const deliveryCharge = document.getElementById("deliveryCharge");
  const totalPrice = document.getElementById("totalPrice");

  price.textContent = `$${sum}`;
  deliveryCharge.textContent = "$500"; // Your delivery charge
  totalPrice.textContent = `$${sum + 500}`;
}

  
  window.onload = countPrice; 

  //        // Attach a click event listener to the "Remove" buttons
  // $('.remove-product').on('click', function () {
  //   const productId = $(this).data('productid');
  //   const listItem = $(this).closest('li'); // Capture the list item here

  //   // Send a request to the server to remove the product
  //   $.ajax({
  //     type: 'GET',
  //     url: `/userCart/delete/${productId}`,
  //     success: function (response) {
  //       // Check if the removal was successful before removing the item from the list
  //       if (response.message === 'Product removed from cart') {
  //         listItem.remove(); // Remove the list item
  //         alert(response.message);
  //       } else {
  //         alert('Failed to remove the product');
  //       }
  //     },
  //     error: function (error) {
  //       alert(error.responseJSON.error);
  //     },
  //   });
  // });
  </script>
 
    <script
      type="module"
      src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"
    ></script>
    <script
      nomodule
      src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
      crossorigin="anonymous"
    ></script>
  </body>
</html>